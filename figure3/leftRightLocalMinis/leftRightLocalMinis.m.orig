% This script should generate figure 3 panel E boxplots


%% Load annotations and connectors

% Load annotations json. Generated by gen_annotation_map.py
annotations=loadjson('../../tracing/sid_by_annotation.json');

% Return all skeleton IDs for R and L ORNs
ORNs_Left=annotations.Left_0x20_ORN;
ORNs_Right=annotations.Right_0x20_ORN;
ORNs=[ORNs_Left, ORNs_Right];

%return all skeleton IDs of DM6 PNs
PNs=sort(annotations.DM6_0x20_PN);

%Load the connector structure
load('../../tracing/conns.mat')

%gen conn fieldname list
connFields=fieldnames(conns);

%% For this code to run you must first run pullmEPSPs
<<<<<<< HEAD

%load the local mini matrix

% localMinis.mat is produced by running the script
% nC_projects/localMinis.mat

load('../../nC_projects/localMinis.mat')
=======
%
% nC_projects_lite/ available at https://neurodata.io/data/tobin17
% download into the this repos root directory
%
% load the local mini matrix
load('../../nC_projects_lite/localMinis.mat')
>>>>>>> 7ae7c31bc01052b2a2beca95334a739fb762de71

PN_Names={'PN1LS','PN2LS', 'PN3LS', 'PN1RS', 'PN2RS'};

%Loop over each PN
for p=1:5
    PN=PN_Names{p};
    
    %Import the list of ORN skel IDs corresponding to each synapse, this
    %was generated by pullmEPSPs.m
    
    synIDs=importdata(['../../nC_projects_lite/',PN,'_allORNs/simulations/minis/ornIDs.txt']);
    
    
    for s=1:length(synIDs)
        
        localMiniAmps{p}(s)=max(localMinis{p}(s,:))+60;
        
    end
    

    
end

%% L v R local mEPSP amplitude

lAmp=[localMiniAmps{1},localMiniAmps{2},localMiniAmps{3}];
rAmp=[localMiniAmps{4},localMiniAmps{5}];

gpsU = [ones(size(lAmp)),2.*ones(size(rAmp))];
valsU = [lAmp,rAmp];
[YUmean,YUsem,YUstd,YUci] = grpstats(valsU,gpsU,{'mean','sem','std','meanci'});


%% Simple bar plot Left-Right PN mEPSP decay

figure
set(gcf,'Color', 'w')
boxplot(valsU,gpsU, 'notch', 'on', 'Color', 'k')
ax = gca;
ax.XTick = [1 2];
ax.XTickLabel = {'Left PNs';'RightPNs'};
ax.FontSize=16;
ylabel('Local mEPSP Amp (mV)')
axis square

saveas(gcf,'localmEPSPAmpLvR')
saveas(gcf,'localmEPSPAmpLvR','epsc')



